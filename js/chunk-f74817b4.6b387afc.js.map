{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts"],"names":["$","is","target","stat","mixins","name","functional","props","value","type","Number","default","max","String","render","parseInt","content","isGreater","h","staticClass","class","ctx","data","isIntersecting","mounted","this","onObserve","destroyed","methods","i","length","options","callback","console","baseMixins","onVisible","dirtyTypes","directives","resize","ripple","inheritAttrs","appendOuterIcon","autofocus","clearable","clearIcon","counter","Boolean","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","persistentPlaceholder","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","color","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","watch","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","window","clearableCallback","$refs","input","genAppendSlot","slot","$slots","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","$createElement","genCounter","attrs$","dark","light","genControl","genDefaultSlot","genFieldset","attrs","genLabel","absolute","disabled","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","undefined","genInput","listeners","Object","inputAttrs","lazyValue","id","readonly","on","keydown","onKeyDown","ref","modifiers","quiet","onResize","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","e","$nextTick","onClick","onFocus","root","$emit","onInput","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","document","updateValue"],"mappings":"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","file":"js/chunk-f74817b4.6b387afc.js","sourcesContent":["var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.es/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  return Vue.extend({\n    name: 'intersectable',\n\n    data: () => ({\n      isIntersecting: false,\n    }),\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        this.isIntersecting = isIntersecting\n\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    persistentPlaceholder: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive || this.persistentPlaceholder\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n    this.autofocus && this.tryAutofocus()\n    requestAnimationFrame(() => {\n      this.isBooted = true\n      requestAnimationFrame(() => {\n        if (!this.isIntersecting) {\n          this.onResize()\n        }\n      })\n    })\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      // if the text field has no content then don't display the clear icon.\n      // We add an empty div because other controls depend on a ref to append inner\n      if (!this.isDirty) {\n        return this.genSlot('append', 'inner', [\n          this.$createElement('div'),\n        ])\n      }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n        staticClass: 'notranslate',\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n      const { title, ...inputAttrs } = this.attrs$\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...inputAttrs,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.persistentPlaceholder || this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (\n        e.keyCode === keyCodes.enter &&\n        this.lazyValue !== this.initialValue\n      ) {\n        this.initialValue = this.lazyValue\n        this.$emit('change', this.initialValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n"],"sourceRoot":""}